<Page
    x:Class="Test.DragControl.Views.ListPageView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    Title="ListPageView"
    DataContext="{Binding ListPageVM, Source={StaticResource Locator}}">

    <Page.Resources>
        <Style TargetType="DataGrid">
            <Setter Property="Margin" Value="16,5,16,16" />
            <Setter Property="CanUserResizeColumns" Value="false" />
            <Setter Property="AutoGenerateColumns" Value="false" />
            <Setter Property="CanUserAddRows" Value="false" />
            <Setter Property="CanUserDeleteRows" Value="false" />
            <Setter Property="CanUserSortColumns" Value="False" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="SelectionUnit" Value="FullRow" />
            <Setter Property="Background" Value="#E6DBBB" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="HorizontalGridLinesBrush" Value="#d6c79b" />
            <Setter Property="VerticalGridLinesBrush" Value="{x:Null}" />
            <Setter Property="AlternationCount" Value="2" />
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="28" />
            <Setter Property="Foreground" Value="#323433" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border
                            x:Name="BackgroundBorder"
                            Width="Auto"
                            BorderBrush="#e6d"
                            BorderThickness="0,1,0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="25" />
        </Style>

        <!--  单元格样式触发  -->
        <Style TargetType="DataGridCell">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <TextBlock VerticalAlignment="Center" TextAlignment="Center">
                            <ContentPresenter />
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <!--  行样式触发  -->
        <!--  背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式  -->
        <Style TargetType="DataGridRow">
            <Setter Property="Height" Value="35" />
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <!--  隔行换色  -->
                <Trigger Property="AlternationIndex" Value="0">
                    <Setter Property="Background" Value="#e7e7e7" />
                </Trigger>
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#f2f2" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#fbe178" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Button
            Width="100"
            Height="32"
            Margin="0,5,16,0"
            HorizontalAlignment="Right"
            Command="{Binding CreateCommand}"
            Content="创建听力材料" />

        <DataGrid
            x:Name="dataList"
            Grid.Row="1"
            ItemsSource="{Binding ListeningMaterials}">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Title}"
                    Foreground="Red"
                    Header="听力材料" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Vision}"
                    Header="所属版本" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Volume}"
                    Header="所属册次" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Module}"
                    Header="所属模块" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding CreateTime, StringFormat={}{0:yyyy-MM-dd HH:mm}}"
                    Header="创建时间" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding UpdateTime, StringFormat={}{0:yyyy-MM-dd HH:mm}}"
                    Header="更新时间" />
                <DataGridTemplateColumn Width="*" Header="操作">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button
                                    Width="100"
                                    Height="32"
                                    Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type Page}}}"
                                    CommandParameter="{Binding SelectedItem, ElementName=dataList}"
                                    Content="编辑" />
                                <Button
                                    Width="100"
                                    Height="32"
                                    Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type Page}}}"
                                    CommandParameter="{Binding SelectedItem.MaterialId, ElementName=dataList}"
                                    Content="删除" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <hc:Pagination
            x:Name="pagination"
            Grid.Row="2"
            Margin="0,16"
            HorizontalAlignment="Center"
            DataCountPerPage="{Binding PageSize}"
            IsJumpEnabled="False"
            MaxPageCount="{Binding MaxPageCount}"
            PageIndex="{Binding PageIndex, Mode=TwoWay}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PageUpdated">
                    <i:InvokeCommandAction Command="{Binding PageUpdatedCommand}" CommandParameter="{Binding PageIndex}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </hc:Pagination>
    </Grid>
</Page>
